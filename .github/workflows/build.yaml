name: build
on:
  push:
  pull_request:
  # build weekly at 4:00 AM UTC
  schedule:
    - cron: '0 4 * * 1'
jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.10"]
        include:
          - os: ubuntu-latest
            python-version: 3.6
          - os: ubuntu-latest
            python-version: 3.7
          - os: ubuntu-latest
            python-version: 3.8
          - os: ubuntu-latest
            python-version: 3.9
    name: "Python ${{ matrix.python-version }} on ${{ matrix.os }} "
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Requirements
        run: |
          python -m pip install -U tox
      - name: Run Linting
        # only lint on 3.10 for faster overall runs
        if: ${{ matrix.python-version == '3.10' }}
        run: python -m tox -e lint
      - name: Run Tests
        run: python -m tox -e py -- --cov-report="term-missing:skip-covered"
      - name: Mindeps Test
        # mindeps runs on py36, as "the oldest everything"
        if: ${{ matrix.python-version == '3.6' && matrix.os == 'ubuntu-latest' }}
        run: python -m tox -e py-mindeps
      - name: Ensure docs build
        # docs are only ever built on a linux 3.10 box (readthedocs)
        if: ${{ matrix.python-version == '3.10' && matrix.os == 'ubuntu-latest' }}
        run: python -m tox -e docs
      - name: Check package metadata
        # only on linux py3.10 for faster runs
        if: ${{ matrix.python-version == '3.10' && matrix.os == 'ubuntu-latest' }}
        run: |
          python -m tox -e twine-check
          python -m tox -e poetry-check
